--- USBdriveSF.f	2009-01-08 18:40:44.656250000 -0600
+++ USBdriveGW.f	2009-01-08 18:38:55.296875000 -0600
@@ -1,3 +1,3 @@
-{ ====================================================================
+0 [if] ====================================================================
 USB FORTHdrive Interface
 
@@ -11,9 +11,9 @@
 to reproduce that huge volume of information here in the comments.
 Use "MSDN Windows API Refence" from the SwiftForth Help menu.
-==================================================================== }
+==================================================================== [then]
 
 HOST
 
-{ --------------------------------------------------------------------
+0 [if] --------------------------------------------------------------------
 DeviceIoControl
 
@@ -35,7 +35,26 @@
 OBUF is a general-purpose output buffer for ioctrl replies.
 OBCNT is a place to dump the output byte count (addr3 above).
--------------------------------------------------------------------- }
+-------------------------------------------------------------------- [then]
 
-FUNCTION: DeviceIoControl ( h cc addr1 u1 addr2 u2 addr3 addr4 -- bool )
+HostForth SFWhost = [IF]
+   FUNCTION: DeviceIoControl ( h cc addr1 u1 addr2 u2 addr3 addr4 -- bool )
+[THEN]
+
+HostForth GFWhost = [IF]
+   \c #include <windows.h>
+   \c #include <winioctl.h>
+   c-function DeviceIoControlSys DeviceIoControl a n a n a n a a -- n
+   c-function FormatMessage FormatMessage n a n n a n a -- n
+   c-function CreateFile CreateFile a n n a n n a -- a
+   c-function CloseHandle CloseHandle a -- n
+   c-function GetLastError GetLastError -- n
+   c-function LocalFree LocalFree a -- a
+
+: DeviceIoControl ( h cc addr1 u1 addr2 u2 addr3 addr4 -- bool )
+   DeviceIoControlSys dup 0= if
+      0x1300 0 GetLastError 0 pad 0 0 FormatMessage
+      space pad @ swap type  pad @ LocalFree drop
+   then ;
+[THEN]
 
 $2D1400 CONSTANT IOCTL_STORAGE_QUERY_PROPERTY
@@ -51,5 +70,5 @@
 VARIABLE >SPT           \ Pointer to SCSI pass-through buffer
 
-{ --------------------------------------------------------------------
+0 [if] --------------------------------------------------------------------
 Simple field access
 
@@ -67,5 +86,5 @@
 
 ALIGN4 adjusts the offset to the next mod4 boundary.
--------------------------------------------------------------------- }
+-------------------------------------------------------------------- [then]
 
 : INDEX: ( addr u1 u2 -- addr u3 )
@@ -79,5 +98,5 @@
 : ALIGN4 ( u1 -- u2 )   3 + -4 AND ;
 
-{ --------------------------------------------------------------------
+0 [if] --------------------------------------------------------------------
 Open drive
 
@@ -98,11 +117,12 @@
 LOCK- and UNLOCK-DRIVE grant exclusive access to the drive.  These are
 wrapped around SCSI pass-through transactions.
--------------------------------------------------------------------- }
+-------------------------------------------------------------------- [then]
 
 VARIABLE DH
 
-CREATE "DRIVE"  ," \\.\x:"      \ 'x' (offset=5) will be substituted with drive letter
+CREATE "DRIVE"  ," \\.\PhysicalDrive0" 0 C,  \ '0' (offset=18) will be substituted with drive letter
+     0 "DRIVE" COUNT + C!
 
-: !DRIVE ( char -- )   "DRIVE" 5 + C! ;
+: !DRIVE ( char -- )   "DRIVE" 18 + C! ;
 
 : DRIVE ( -- )   CHAR STATE @ IF
@@ -119,14 +139,28 @@
    FSCTL_UNLOCK_VOLUME (UN)LOCK ;
 
+HostForth SFWhost = [IF]
 : OPEN-DRIVE ( -- flag )
    LOCK-DRIVE
    "DRIVE" COUNT R/W OPEN-FILE 0= SWAP OVER AND DH ! ;
+[THEN]
 
+HostForth GFWhost = [IF]
+: OPEN-DRIVE ( -- handle )
+   "DRIVE" COUNT DROP 3 3 0 3 128 0 CreateFile DUP DH ! ;
+[THEN]
+
+HostForth SFWhost = [IF]
 : CLOSE-DRIVE ( -- )
    DH @ ?DUP IF  CLOSE-FILE DROP  0 DH !  THEN
    UNLOCK-DRIVE
  ;
+[THEN]
+
+HostForth GFWhost = [IF]
+: CLOSE-DRIVE ( -- )
+   DH @ ?DUP IF  CloseHandle DROP  0 DH !  THEN ;
+[THEN]
 
-{ --------------------------------------------------------------------
+0 [if] --------------------------------------------------------------------
 Device properties
 
@@ -150,5 +184,5 @@
 use.  Don't forget CLOSE-DRIVE when you're done with it.  A little
 message with the drive letter is output to the command line.
--------------------------------------------------------------------- }
+-------------------------------------------------------------------- [then]
 
 >OBUF 0
@@ -186,5 +220,5 @@
 
 : FIND-DRIVE ( -- )
-   -1  27 3 DO  [CHAR] A I + !DRIVE
+   -1  10 0 DO  [CHAR] 0 I + !DRIVE
       OPEN-DRIVE IF  STORAGE-QUERY IF
          ?SEAFORTH IF  1+ LEAVE  THEN THEN
@@ -193,5 +227,5 @@
    CR ." Using FORTHdrive "  "DRIVE" COUNT 4 /STRING TYPE ;
 
-{ --------------------------------------------------------------------
+0 [if] --------------------------------------------------------------------
 SCSI pass-through buffer
 
@@ -199,5 +233,5 @@
 >SPT. This buffer is huge, so it gets allocated at run-time in
 extended memory.
--------------------------------------------------------------------- }
+-------------------------------------------------------------------- [then]
 
 16 CONSTANT |CDB|               \ Size of Command Descriptor Block
@@ -231,7 +265,9 @@
 : \SPTMEM ( -- )   >SPT @ ?DUP IF  FREE DROP  THEN ;
 
-:ONSYSLOAD   /SPTMEM ;
-:ONSYSEXIT   \SPTMEM ;
-:PRUNE   ?PRUNE IF  \SPTMEM  THEN ;
+HostForth SFWhost = [IF]
+   :ONSYSLOAD   /SPTMEM ;
+   :ONSYSEXIT   \SPTMEM ;
+   :PRUNE   ?PRUNE IF  \SPTMEM  THEN ;
+[THEN]
 
 /SPTMEM         \ Init for immedate use
@@ -243,5 +279,5 @@
    DUP SPT-CdbLength C!  SPT-Cdb SWAP CMOVE ;
 
-{ --------------------------------------------------------------------
+0 [if] --------------------------------------------------------------------
 SCSI command interface
 
@@ -254,5 +290,5 @@
 
 The order of steps 2-3 does not matter.
--------------------------------------------------------------------- }
+-------------------------------------------------------------------- [then]
 
 0 CONSTANT SCSI_IOCTL_DATA_OUT
@@ -271,5 +307,5 @@
  ;
 
-{ --------------------------------------------------------------------
+0 [if] --------------------------------------------------------------------
 SEAforth SCSI commands
 
@@ -297,5 +333,5 @@
 
 /SEAFORTH performs the init command.  Returns the ior (0=bad).
--------------------------------------------------------------------- }
+-------------------------------------------------------------------- [then]
 
 : CDB-BITS ( -- addr )   SPT-CDB 7 + ;
@@ -324,10 +360,10 @@
   $90 C,  $00 C,
 
-{ --------------------------------------------------------------------
+0 [if] --------------------------------------------------------------------
 Data format translation
 
 BEW! stores a 16-bit word in big-endian format at an unaligned address.
 16>OnStream appends a 16-bit word to the stream in the SPT data buffer.
--------------------------------------------------------------------- }
+-------------------------------------------------------------------- [then]
 
 : BEW! ( x addr -- )  OVER 8 RSHIFT OVER C!  1+ C! ;
@@ -336,5 +372,5 @@
    2 SPT-DataTransferLength +! ;
 
-{ --------------------------------------------------------------------
+0 [if] --------------------------------------------------------------------
 SEAforth [x] buffer transfers
 
@@ -346,5 +382,5 @@
 [x]>USBdrive sends the [x] buffer to the drive.
 USBdrive>[x] reads from the drive, compiling into the [x] memory.
--------------------------------------------------------------------- }
+-------------------------------------------------------------------- [then]
 
 HOST
@@ -377,3 +413,3 @@
    LOOP 2DROP ;
 
-ONLY FORTH DEFINITIONS
+HOST
